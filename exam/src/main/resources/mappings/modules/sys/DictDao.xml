<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ynsh.modules.sys.dao.DictDao">
	<sql id="dictColumns">
		a.id,
		a.parent_id,
		array_to_string(a.parent_ids, ',') AS parent_ids,
		a.name,
		a.value,
		a.type,
		a.description,
		a.sort,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_time,
		a.update_by AS "updateBy.id",
		a.update_time,
		a.del_flag
	</sql>


	<select id="get" resultType="Dict">
		SELECT
		<include refid="dictColumns"/>
		FROM t_sys_dict a
		WHERE id = #{id}
	</select>
	
	<select id="findList" resultType="Dict">
		SELECT
		<include refid="dictColumns"/>
		FROM t_sys_dict a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="type != null and type != ''">
			AND a.type = #{type}
		</if>
		<if test="description != null and description != ''">
			AND description LIKE '%'||#{description}||'%'
		</if>
		ORDER BY a.type, a.sort, a.update_time DESC
	</select>
	
	<select id="findAllList" resultType="Dict">
		SELECT
		<include refid="dictColumns"/>
		FROM t_sys_dict a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.type, a.sort, a.update_time DESC
	</select>
	
	<select id="findTypeList" resultType="string">
		SELECT 
			type 
		FROM t_sys_dict 
		WHERE del_flag = #{DEL_FLAG_NORMAL} 
		GROUP BY type
		ORDER BY type
	</select>

	<select id="findByParentIdsLike" resultType="Dict">
		SELECT
		a.id,
		a.parent_id,
		a.parent_ids
		FROM t_sys_dict a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids @> CAST(string_to_array(#{parentIds}, ',') AS INTEGER[])
		ORDER BY a.type
	</select>
	
	<insert id="insert">
		<selectKey resultType="java.lang.Long"  order="AFTER" keyProperty="id" >
			SELECT currval('t_sys_dict_id_seq') AS id
		</selectKey>

		INSERT INTO t_sys_dict
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="parentIds != null and parent_ids != ''">
				parent_ids,
			</if>
			<if test="name != null and name != ''">
				name,
			</if>
			<if test="value != null and value != ''">
				value,
			</if>
			<if test="type != null and type != ''">
				type,
			</if>
			<if test="description != null and description != ''">
				description,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="remarks != null and remarks != ''">
				remarks,
			</if>
			<if test="createBy != null and createBy.id != null">
				create_by,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateBy != null and updateBy.id != null">
				update_by,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="delFlag != null">
				del_flag
			</if>
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="parentId != null">
				#{parentId},
			</if>
			<if test="parentIds != null and parent_ids != ''">
				<![CDATA[ CAST(string_to_array(#{parentIds}, ',') AS INTEGER[]), ]]>
			</if>
			<if test="name != null and name != ''">
				#{name},
			</if>
			<if test="value != null and value != ''">
				#{value},
			</if>
			<if test="type != null and type != ''">
				#{type},
			</if>
			<if test="description != null and description != ''">
				#{description},
			</if>
			<if test="sort != null">
				#{sort},
			</if>
			<if test="remarks != null and remarks != ''">
				#{remarks},
			</if>
			<if test="createBy != null and createBy.id != null">
				#{createBy.id},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateBy != null and updateBy.id != null">
				#{updateBy.id},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="delFlag != null">
				#{delFlag}
			</if>
		</trim>
	</insert>
	
	<update id="update">
		UPDATE t_sys_dict SET
			parent_id = #{parentId},
			parent_ids = CAST(string_to_array(#{parentIds}, ',') AS INTEGER[]),
			name = #{name},
			value = #{value},
			type = #{type},
			description = #{description}, 
			sort = #{sort}, 
			remarks = #{remarks}
			update_by = #{updateBy.id},
			update_time = #{updateTime},
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE t_sys_dict SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids @> ARRAY[#{id}]
	</update>
	
</mapper>